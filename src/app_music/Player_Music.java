/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app_music;

import java.io.File;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import javazoom.jl.decoder.JavaLayerException;
import javazoom.jlgui.basicplayer.BasicController;
import javazoom.jlgui.basicplayer.BasicPlayerEvent;
import javazoom.jlgui.basicplayer.BasicPlayerListener;
import jdk.nashorn.internal.parser.JSONParser;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

/**
 *
 * @author billd
 */
public class Player_Music extends javax.swing.JFrame implements BasicPlayerListener {

    /**
     * Creates new form Player_Music
     */
    public static boolean ok_volume = true;
    public static boolean ok_mix = true;
    public static boolean ok_repeat = true;
    private getFile getfile = new getFile();
    private processMussic player = new processMussic();
    private ArrayList<String> ListSong = new ArrayList<>();
    Timer timer = null;
    private getMusic MC = new getMusic();
    public static boolean playing;
    public static boolean haspause;
    int bai = -1;
    private ArrayList<String> listURL;
    private ArrayList<String> listName;
    private ArrayList<String> listNamePlaylist;
    private ArrayList<String> listURLPlaylist;
    private Boolean off;
    private Testplay play_onl = new Testplay();
    public static Thread queryThread;
    private getMussicJL bsplay = new getMussicJL();
    org.json.simple.parser.JSONParser parser = new org.json.simple.parser.JSONParser();

    public Player_Music() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/img/music-1.png")).getImage());
        playing = false;
        haspause = false;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtNameSong = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btndown = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jProgressBar1 = new javax.swing.JProgressBar();
        jPanel5 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        btn_left = new javax.swing.JButton();
        btn_play = new javax.swing.JButton();
        btn_right = new javax.swing.JButton();
        btn_stop = new javax.swing.JButton();
        btn_volume = new javax.swing.JButton();
        btn_mix = new javax.swing.JButton();
        btn_repeat = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSong = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        btn_opent = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        inputNameSong_onl = new javax.swing.JTextField();
        btnSearch_onl = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        selectPlaylist = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablePlaylist = new javax.swing.JTable();

        jScrollPane2.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Iplayer");
        setLocationByPlatform(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel2.setFocusable(false);

        txtNameSong.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        txtNameSong.setForeground(new java.awt.Color(0, 51, 255));
        txtNameSong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/compact-disc.png"))); // NOI18N

        btndown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/download.png"))); // NOI18N
        btndown.setToolTipText("Download");
        btndown.setBorder(null);
        btndown.setContentAreaFilled(false);
        btndown.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(txtNameSong, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btndown, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtNameSong, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btndown, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jProgressBar1.setForeground(new java.awt.Color(0, 0, 255));
        jProgressBar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jProgressBar1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btn_left.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Previous-icon.png"))); // NOI18N
        btn_left.setBorder(null);
        btn_left.setBorderPainted(false);
        btn_left.setContentAreaFilled(false);
        btn_left.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_leftActionPerformed(evt);
            }
        });

        btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png"))); // NOI18N
        btn_play.setBorder(null);
        btn_play.setBorderPainted(false);
        btn_play.setContentAreaFilled(false);
        btn_play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_playActionPerformed(evt);
            }
        });

        btn_right.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Next-icon.png"))); // NOI18N
        btn_right.setBorder(null);
        btn_right.setBorderPainted(false);
        btn_right.setContentAreaFilled(false);
        btn_right.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_rightActionPerformed(evt);
            }
        });

        btn_stop.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Stop-icon (1).png"))); // NOI18N
        btn_stop.setBorder(null);
        btn_stop.setBorderPainted(false);
        btn_stop.setContentAreaFilled(false);
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });

        btn_volume.setBackground(new java.awt.Color(0, 0, 0));
        btn_volume.setForeground(new java.awt.Color(255, 255, 255));
        btn_volume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/speaker.png"))); // NOI18N
        btn_volume.setBorder(null);
        btn_volume.setContentAreaFilled(false);
        btn_volume.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_volume.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_volumeActionPerformed(evt);
            }
        });

        btn_mix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/shuffle1.png"))); // NOI18N
        btn_mix.setBorder(null);
        btn_mix.setContentAreaFilled(false);
        btn_mix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_mixActionPerformed(evt);
            }
        });

        btn_repeat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reload.png"))); // NOI18N
        btn_repeat.setBorder(null);
        btn_repeat.setContentAreaFilled(false);
        btn_repeat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_repeatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_left)
                .addGap(14, 14, 14)
                .addComponent(btn_play)
                .addGap(14, 14, 14)
                .addComponent(btn_right)
                .addGap(22, 22, 22)
                .addComponent(btn_stop)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btn_volume, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_mix)
                .addGap(18, 18, 18)
                .addComponent(btn_repeat)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btn_right)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btn_stop)
                        .addComponent(btn_volume)
                        .addComponent(btn_mix)
                        .addComponent(btn_repeat))
                    .addComponent(btn_left)
                    .addComponent(btn_play))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Danh Sách"));

        tableSong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Tên bài hát"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableSong);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 315, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Nghe nhạc offline"));

        btn_opent.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/music-folder.png"))); // NOI18N
        btn_opent.setToolTipText("Opent File");
        btn_opent.setBorder(null);
        btn_opent.setBorderPainted(false);
        btn_opent.setContentAreaFilled(false);
        btn_opent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_opentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(btn_opent, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 206, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btn_opent, javax.swing.GroupLayout.PREFERRED_SIZE, 60, Short.MAX_VALUE)
        );

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Nghe nhạc online")));

        inputNameSong_onl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inputNameSong_onlActionPerformed(evt);
            }
        });
        inputNameSong_onl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inputNameSong_onlKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputNameSong_onlKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                inputNameSong_onlKeyTyped(evt);
            }
        });

        btnSearch_onl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/search.png"))); // NOI18N
        btnSearch_onl.setToolTipText("search");
        btnSearch_onl.setBorder(null);
        btnSearch_onl.setContentAreaFilled(false);
        btnSearch_onl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch_onlActionPerformed(evt);
            }
        });

        jLabel1.setText("Nhập tên bài hát");

        selectPlaylist.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Chọn Playlist", "Playlist Mới", "Nhạc Trẻ", "Trữ Tình", "Cách Mạng", "Tiền Chiến", "Nhạc Trịnh", "Thiếu Nhi", "Rap Việt", "Rock Việt", "Âu, Mỹ", "Hàn Quốc", "Nhạc Hoa", "Nhạc Nhật", "Không Lời", "Nhạc Phim", "Thể Loại Khác" }));
        selectPlaylist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPlaylistActionPerformed(evt);
            }
        });

        tablePlaylist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Danh sách playlist"
            }
        ));
        tablePlaylist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePlaylistMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablePlaylist);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(0, 187, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addComponent(selectPlaylist, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(inputNameSong_onl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch_onl, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnSearch_onl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputNameSong_onl, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectPlaylist, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                    .addGap(82, 82, 82)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_playActionPerformed
        // TODO add your handling code here:
        if (off) {
            btndown.setEnabled(false);
            int row = tableSong.getSelectedRow();
            if (playing == false) {
                if (row == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn bài hát", "Thông báo", 0);
                } else if (haspause == false) {
                    bai = row;
                    MC.Stop();
                    play_onl.Stop();
                    MC.play(ListSong.get(row));
                    //MC.bsplay(ListSong.get(row));
                    File ftmp = new File(ListSong.get(row));
                    String name = ftmp.getName().toString();
                    txtNameSong.setText(name);
                    playing = true;
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                } else {
                    MC.resume();
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                    haspause = false;
                    playing = true;
                }
            } else {
                btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png")));
                playing = false;
                MC.Pause();
                haspause = true;
            }
        } else {
            btndown.setEnabled(true);

            if (playing == false) {
                if (haspause == false) {
                    //play_onl();
                    int index = tableSong.getSelectedRow();
                    if (index == -1) {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn bài hát", "Thông báo", 0);
                    } else {
                        String bail = listURL.get(index);
                        String name = tableSong.getValueAt(index, 1).toString();
                        txtNameSong.setText(name);
                        this.bai = index;
                        
                        System.err.println(bail);
                        play_onl.play(bail);
                        playing = true;
                        btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                    }
                } else {
                    play_onl.resume();
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                    haspause = false;
                    playing = true;
                }
            } else {
                btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png")));
                playing = false;
                play_onl.pause();
                haspause = true;
            }
        }
    }//GEN-LAST:event_btn_playActionPerformed


    private void inputNameSong_onlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputNameSong_onlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNameSong_onlActionPerformed

    private void btnSearch_onlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch_onlActionPerformed
        // TODO add your handling code here:
        search_onl();
        off = false;
        playing = false;
        haspause = false;
        MC.Stop();
        play_onl.Stop();
    }//GEN-LAST:event_btnSearch_onlActionPerformed

    private void search_onl() {
        String textSearch = inputNameSong_onl.getText();
        HttpURLConnectionExample http = new HttpURLConnectionExample();
        String jsonui = null;
        try {
            jsonui = http.sendGet(textSearch);
        } catch (Exception ex) {
            Logger.getLogger(Player_Music.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            System.out.println(jsonui);
            Object obj = parser.parse(jsonui);
            JSONArray array = (JSONArray) obj;
            int larray = array.size();

            listURL = new ArrayList<>();
            listName = new ArrayList<>();
            DefaultTableModel tbmode = (DefaultTableModel) tableSong.getModel();
            tbmode.getDataVector().removeAllElements();
            for (int i = 0; i < larray; i++) {
                JSONObject obj2 = (JSONObject) array.get(i);
                listURL.add(obj2.get("LinkSong").toString());
                listName.add(obj2.get("TenSong").toString() + " - " + obj2.get("CaSi").toString());
                //System.out.println(listName.get(i));
                tbmode.addRow(new Object[]{i + 1, listName.get(i)});
            }
        } catch (org.json.simple.parser.ParseException pe) {

            System.out.println("position: " + pe.getPosition());
            System.out.println(pe);
        }
    }
    private void btn_opentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_opentActionPerformed
        // TODO add your handling code here:
        String[] listPath = getfile.getListSong("Archivos MP3", "mp3");
        if (listPath.length > 0) {
            off = true;
            MC.Stop();
            play_onl.Stop();
            ListSong.addAll(Arrays.asList(listPath));
            DefaultTableModel tablemode = (DefaultTableModel) tableSong.getModel();
            tablemode.getDataVector().removeAllElements();
            File ftg;
            for (int i = 0; i < ListSong.size(); ++i) {
                ftg = new File(ListSong.get(i));
                tablemode.addRow(new Object[]{i + 1, ftg.getName().substring(0, ftg.getName().length() - 4)});
            }
        }

//        for(int i = 0; i < listPath.length; ++i )
//            System.out.println(listPath[i]);
        File f = new File(listPath[0]);
        System.out.println(f.getName());
    }//GEN-LAST:event_btn_opentActionPerformed

    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        // TODO add your handling code here:
        if (off) {
            MC.Stop();
        } else {
            play_onl.Stop();
        }
    }//GEN-LAST:event_btn_stopActionPerformed

    private void jProgressBar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jProgressBar1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jProgressBar1MouseClicked

    private void btn_rightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_rightActionPerformed
        // TODO add your handling code here:
        playing = false;
        haspause = false;
        play_onl.Stop();
        System.out.println("toi " + bai);
        MC.Stop();
        int row = -1;
        if (bai < tableSong.getRowCount() - 1) {
            bai++;
            row = bai;
        } else {
            bai = 0;
            row = 0;
        }
        System.out.println("toi " + row);
        if (off) {

            if (playing == false) {
                if (row == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn bài hát", "Thông báo", 0);
                } else if (haspause == false) {
                    tableSong.setRowSelectionInterval(row, row);
                    MC.play(ListSong.get(row));
                    File ftmp = new File(ListSong.get(row));
                    String name = ftmp.getName().toString();
                    txtNameSong.setText(name);
                    playing = true;
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                } else {
                    MC.resume();
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                    haspause = false;
                    playing = true;
                }
            } else {
                btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png")));
                playing = false;
                MC.Pause();
                haspause = true;
            }
        } else if (playing == false) {
            if (haspause == false) {
                //play_onl();
                int index = row;
                if (index == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn bài hát", "Thông báo", 0);
                } else {
                    tableSong.setRowSelectionInterval(row, row);
                    System.out.println("ok next");
                    String bail = listURL.get(index);
                    String name = tableSong.getValueAt(index, 1).toString();
                    txtNameSong.setText(name);
                    this.bai = index;

                    System.err.println(bail);
                    play_onl.play(bail);
                    playing = true;
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                }
            } else {
                play_onl.resume();
                btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                haspause = false;
                playing = true;
            }
        } else {
            btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png")));
            playing = false;
            play_onl.pause();
            haspause = true;
        }
    }//GEN-LAST:event_btn_rightActionPerformed

    private void btn_leftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_leftActionPerformed
        // TODO add your handling code here:
        MC.Stop();
        playing = false;
        haspause = false;
        play_onl.Stop();
        int row = -1;
        System.out.println("lui " + bai);
        if (bai > 1) {
            bai--;
            row = bai;
        } else {
            row = tableSong.getRowCount() - 1;
            bai = row;
        }
        System.out.println("lui " + bai);
        if (off) {
            if (playing == false) {
                if (row == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn bài hát", "Thông báo", 0);
                } else if (haspause == false) {
                    tableSong.setRowSelectionInterval(row, row);
                    MC.play(ListSong.get(row));
                    File ftmp = new File(ListSong.get(row));
                    String name = ftmp.getName().toString();
                    txtNameSong.setText(name);
                    playing = true;
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                } else {
                    MC.resume();
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                    haspause = false;
                    playing = true;
                }
            } else {
                btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png")));
                playing = false;
                MC.Pause();
                haspause = true;
            }
        } else if (playing == false) {
            if (haspause == false) {
                //play_onl();
                int index = row;
                if (index == -1) {
                    JOptionPane.showMessageDialog(this, "Vui lòng chọn bài hát", "Thông báo", 0);
                } else {
                    tableSong.setRowSelectionInterval(row, row);
                    System.out.println("ok next");
                    String bail = listURL.get(index);
                    String name = tableSong.getValueAt(index, 1).toString();
                    txtNameSong.setText(name);
                    this.bai = index;

                    System.err.println(bail);
                    play_onl.play(bail);
                    playing = true;
                    btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                }
            } else {
                play_onl.resume();
                btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Pause-icon.png")));
                haspause = false;
                playing = true;
            }
        } else {
            btn_play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Aqua-Play-icon.png")));
            playing = false;
            play_onl.pause();
            haspause = true;
        }
    }//GEN-LAST:event_btn_leftActionPerformed

    private void inputNameSong_onlKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNameSong_onlKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_inputNameSong_onlKeyPressed

    private void inputNameSong_onlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNameSong_onlKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_inputNameSong_onlKeyTyped

    private void inputNameSong_onlKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputNameSong_onlKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_inputNameSong_onlKeyReleased

    private void selectPlaylistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPlaylistActionPerformed
        // TODO add your handling code here:
        HttpURLConnectionExample http = new HttpURLConnectionExample();
        String playlist = null;
        String selected = selectPlaylist.getSelectedItem().toString();
        if (selected.equals("Playlist Mới")) {
            playlist = "playlist-list";
        } else if (selected.equals("Nhạc Trẻ")) {
            playlist = "nhac-tre";
        } else if (selected.equals("Trữ Tình")) {
            playlist = "tru-tinh";
        } else if (selected.equals("Cách Mạng")) {
            playlist = "cach-mang";
        } else if (selected.equals("Tiền Chiến")) {
            playlist = "tien-chien";
        } else if (selected.equals("Nhạc Trịnh")) {
            playlist = "nhac-trinh";
        } else if (selected.equals("Thiếu Nhi")) {
            playlist = "thieu-nhi";
        } else if (selected.equals("Rap Việt")) {
            playlist = "rap-viet";
        } else if (selected.equals("Rock Việt")) {
            playlist = "rock-viet";
        } else if (selected.equals("Âu, Mỹ")) {
            playlist = "au-my";
        } else if (selected.equals("Hàn Quốc")) {
            playlist = "han-quoc";
        } else if (selected.equals("Nhạc Hoa")) {
            playlist = "nhac-hoa";
        } else if (selected.equals("Nhạc Nhật")) {
            playlist = "nhac-nhat";
        } else if (selected.equals("Không Lời")) {
            playlist = "khong-loi";
        } else if (selected.equals("Nhạc Phim")) {
            playlist = "nhac-phim";
        } else if (selected.equals("Thể Loại Khác")) {
            playlist = "the-loai-khac";
        }
        if (playlist.equals("trong")) {
            System.out.println("Select di");
        } else {
            String jsonplaylist = null;
            try {
                jsonplaylist = http.Get_playlist(playlist);
                System.out.println(jsonplaylist);
                Object obj = parser.parse(jsonplaylist);
                JSONArray array = (JSONArray) obj;
                int larray = array.size();
//                listURL = new ArrayList<>();
                listNamePlaylist = new ArrayList<>();
                listURLPlaylist = new ArrayList<>();
                DefaultTableModel tbmode = (DefaultTableModel) tablePlaylist.getModel();
                tbmode.getDataVector().removeAllElements();
                for (int i = 0; i < larray; i++) {
                    JSONObject obj2 = (JSONObject) array.get(i);
                    listURLPlaylist.add(obj2.get("LinkMV").toString());
                    tbmode.addRow(new Object[]{obj2.get("TenPlaylist").toString()});
                }

            } catch (Exception ex) {
                Logger.getLogger(Player_Music.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_selectPlaylistActionPerformed

    private void tablePlaylistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePlaylistMouseClicked
        // TODO add your handling code here:
        off = false;
        MC.Stop();
        play_onl.Stop();
        playing = false;
        haspause = false;
        String url = listURLPlaylist.get(tablePlaylist.getSelectedRow());
        HttpURLConnectionExample http = new HttpURLConnectionExample();
        try {
            String json_song_list = http.Getsong_playlist(url);
            Object obj = parser.parse(json_song_list);
            JSONArray array = (JSONArray) obj;
            int larray = array.size();
            listURL = new ArrayList<>();
            DefaultTableModel tbmode = (DefaultTableModel) tableSong.getModel();
            tbmode.getDataVector().removeAllElements();
            for (int i = 0; i < larray; i++) {
                JSONObject obj2 = (JSONObject) array.get(i);
                String link = obj2.get("location").toString();
                int len2 = link.length();
                String link2 = link.substring(2, len2 - 2);
                String link3 = link2.replace("\\", "");
                listURL.add(link3);
                String text = obj2.get("title").toString();
                int len = text.length();
                String text2 = text.substring(2, len - 2);
                tbmode.addRow(new Object[]{i + 1, text2});
            }
        } catch (Exception ex) {
            Logger.getLogger(Player_Music.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_tablePlaylistMouseClicked

    private void btn_volumeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_volumeActionPerformed
        // TODO add your handling code here:
        if (ok_volume == true) {
            ok_volume = false;
            btn_volume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mute3.png")));
        } else {
            ok_volume = true;
            btn_volume.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/speaker.png")));
        }
    }//GEN-LAST:event_btn_volumeActionPerformed

    private void btn_mixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_mixActionPerformed
        // TODO add your handling code here:
        btn_mix.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/shuffle3.png")));
    }//GEN-LAST:event_btn_mixActionPerformed

    private void btn_repeatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_repeatActionPerformed
        // TODO add your handling code here:
        btn_repeat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/reload3.png")));
    }//GEN-LAST:event_btn_repeatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Player_Music.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Player_Music().setVisible(true);
        });
    }

    @Override
    public void opened(Object o, Map map) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void progress(int i, long l, byte[] bytes, Map map) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void stateUpdated(BasicPlayerEvent bpe) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setController(BasicController bc) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch_onl;
    private javax.swing.JButton btn_left;
    private javax.swing.JButton btn_mix;
    private javax.swing.JButton btn_opent;
    public static javax.swing.JButton btn_play;
    private javax.swing.JButton btn_repeat;
    private javax.swing.JButton btn_right;
    private javax.swing.JButton btn_stop;
    private javax.swing.JButton btn_volume;
    private javax.swing.JButton btndown;
    private javax.swing.JTextField inputNameSong_onl;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public static javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox<String> selectPlaylist;
    private javax.swing.JTable tablePlaylist;
    private javax.swing.JTable tableSong;
    private javax.swing.JLabel txtNameSong;
    // End of variables declaration//GEN-END:variables
}
